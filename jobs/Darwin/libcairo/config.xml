<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Build GTK Cairo library, including dependencies</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>SOURCE_DIR</name>
          <description>Directory for downloaded source</description>
          <defaultValue>$HOME/source</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>BUILD_LIBCAIRO_VERSION</name>
          <description>Version of libcairo to build</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>1.12.8</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>LIBCAIRO_TARBALL</name>
          <description>Full filename of the tarball file; used when downloading, and when checking to see if it&apos;s already been downloaded</description>
          <defaultValue>cairo-${BUILD_LIBCAIRO_VERSION}.tar.xz</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>## DOWNLOAD
if [ ! -e $SOURCE_DIR/$LIBCAIRO_TARBALL ]; then
  if [ ! -d $SOURCE_DIR ]; then
    mkdir $SOURCE_DIR
  fi
  # download the perl tarball, save the logs from wget
  wget -O $SOURCE_DIR/$LIBCAIRO_TARBALL \
    -o $WORKSPACE/wget.log \
    http://www.cairographics.org/releases/${LIBCAIRO_TARBALL}
else
  echo &quot;${JOB_NAME} already exists in ${SOURCE_DIR}&quot;
fi</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>## UNPACK AND CONFIGURE

# always unpack fresh source
if [ -d cairo-${BUILD_LIBCAIRO_VERSION} ]; then
  rm -rf cairo-${BUILD_LIBCAIRO_VERSION}
fi

# -J == xz compression
tar -Jxvf $SOURCE_DIR/$LIBCAIRO_TARBALL

cd cairo-${BUILD_LIBCAIRO_VERSION}

# now run Configure
echo &quot;Current directory is: $(pwd)&quot;
./configure --prefix=../cairo-${BUILD_LIBCAIRO_VERSION}-bin \
  --enable-xlib --enable-drm --enable-png </command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>## BUILD AND TEST
cd cairo-${BUILD_LIBCAIRO_VERSION}
time make
time make test
time make install</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>## ARCHIVE AND DELETE BUILD DIR
# -J == xz compression
tar -cJvf $WORKSPACE/libcairo-${BUILD_LIBCAIRO_VERSION}.artifact.tar.xz \
  $WORKSPACE/cairo-${BUILD_LIBCAIRO_VERSION}-bin
# remove the old install directory
rm -rf $WORKSPACE/cairo-${BUILD_LIBCAIRO_VERSION}-bin</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts></artifacts>
      <latestOnly>false</latestOnly>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers/>
</project>