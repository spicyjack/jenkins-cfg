<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Busybox cross-compiled to:&#xd;
&lt;ul&gt;&#xd;
  &lt;li&gt;Raspberry Pi 1 (armv6-rpi-linux-gnueabi)&lt;/li&gt;&#xd;
  &lt;li&gt;Raspberry Pi 2 (armv7-rpi2-linux-gnueabihf)&lt;/li&gt;&#xd;
  &lt;li&gt;Raspberry Pi 3 (armv8-rpi3-linux-gnueabihf)&lt;/li&gt;&#xd;
  &lt;li&gt;32-bit PowerPC (powerpc-lack-linux-gnu)&lt;/li&gt;&#xd;
&lt;/ul&gt;&#xd;
</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.googlecode.GoogleCodeProjectProperty plugin="googlecode@1.7"/>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>10</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.plugins.disk__usage.DiskUsageProperty plugin="disk-usage@0.28"/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>PKG_VERSION</name>
          <description>Version of busybox to build</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>1.27.2</string>
              <string>1.22.1</string>
              <string>1.21.1</string>
              <string>1.20.3</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>BUILD_ARCH</name>
          <description>Build architecture to use for compiling Busybox</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>armv6-rpi-linux-gnueabi</string>
              <string>armv7-rpi2-linux-gnueabihf</string>
              <string>armv8-rpi3-linux-gnueabihf</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
### SET UP BUILD ENVIRONMENT

if [ ! -d $HOME/src/jenkins/config.git ]; then
  echo &quot;ERROR: missing &apos;jenkins/config.git&apos; repo&quot;
  exit 1
fi

# We know the config.git repo exists, so we can source it now
. $HOME/src/jenkins/config.git/scripts/common_jenkins_functions.sh
job_step_header &quot;Checking for &apos;config.git&apos; and &apos;projects.git&apos; Repos&quot;

if [ ! -d $HOME/src/lack/projects.git ]; then
  echo &quot;ERROR: missing &apos;src/lack/projects.git&apos; repo&quot;
  exit 1
fi

info &quot;Build architecture: ${BUILD_ARCH}&quot;
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

. $HOME/src/jenkins/config.git/scripts/common_jenkins_functions.sh
job_step_header &quot;Updating &apos;config.git&apos; and &apos;projects.git&apos; Repos&quot;

/bin/bash $HOME/src/jenkins/config.git/scripts/update_git.sh \
  --path $HOME/src/jenkins/config.git
/bin/bash $HOME/src/jenkins/config.git/scripts/update_git.sh \
  --path $HOME/src/lack/projects.git</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

. $HOME/src/jenkins/config.git/scripts/common_jenkins_functions.sh
job_step_header &quot;Downloading ${PKG_NAME}, version ${PKG_VERSION}&quot;

/bin/bash $HOME/src/jenkins/config.git/scripts/download_tarball.sh \
  --file ${PKG_NAME}-${PKG_VERSION}.tar.bz2 \
  --url http://busybox.net/downloads/ \
  --log $WORKSPACE/wget.${PKG_NAME}.log \
  --outdir $TARBALL_DIR</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

### UNPACK, COPY CONFIG, SET UP BUILD
#if [ -d ${WORKSPACE}/${PKG_NAME}-${PKG_VERSION} ]; then
#  rm -rf ${WORKSPACE}/${PKG_NAME}-${PKG_VERSION}
#fi

. $HOME/src/jenkins/config.git/scripts/common_jenkins_functions.sh
job_step_header &quot;Setting up build of ${PKG_NAME}-${PKG_VERSION}&quot;

### EXPORTS AND SOURCING ###
# source environment variables and updated $PATH script
source ${HOME}/.bashrc.d/env_vars_path

info &quot;Unpacking ${PKG_NAME}-${PKG_VERSION}.tar.bz2&quot;
info &quot;(Logfile: ${WORKSPACE}/tar.${PKG_NAME}.log&quot;
tar -jxvf $TARBALL_DIR/${PKG_NAME}-${PKG_VERSION}.tar.bz2 \
  &gt; ${WORKSPACE}/tar.${PKG_NAME}.log

LACK_PROJECTS=&quot;${HOME}/src/lack/projects.git&quot;

if [ &quot;x${BUILD_ARCH}&quot; = &quot;xarmv6-rpi-linux-gnueabi&quot; \
  -o &quot;x${BUILD_ARCH}&quot; = &quot;xarmv7-rpi2-linux-gnueabihf&quot; \
  -o &quot;x${BUILD_ARCH}&quot; = &quot;xarmv8-rpi3-linux-gnueabihf&quot; ]; then
  export BUSYBOX_CONFIG=&quot;${LACK_PROJECTS}/armlack/configs/busybox.config-${PKG_VERSION}&quot;
elif [ &quot;x${BUILD_ARCH}&quot; = &quot;xppc&quot; ]; then
  export BUSYBOX_CONFIG=&quot;${LACK_PROJECTS}/ppclack/configs/busybox.config.powerpc-lack-linux-gnu&quot;
else
  echo &quot;ERROR: missing/incorrect BUILD_ARCH specified!&quot;
  echo &quot;BUILD_ARCH choices:&quot;
  echo &quot;- armv6-rpi-linux-gnueabi&quot;
  echo &quot;- armv7-rpi2-linux-gnueabihf&quot;
  echo &quot;- armv8-rpi3-linux-gnueabihf&quot;
  exit 1
fi

# do some substitution in the busybox config
info &quot;Replacing strings in &apos;${BUSYBOX_CONFIG}&apos;&quot;
info &quot;Replacement string: &apos;${BUILD_ARCH}&apos;&quot;

cd ${PKG_NAME}-${PKG_VERSION}
if [ ! -f $BUSYBOX_CONFIG ]; then
  echo &quot;ERROR: missing BusyBox config &apos;${BUSYBOX_CONFIG}&apos;&quot;
  exit 1
fi
cat $BUSYBOX_CONFIG | sed &quot;s/:BUILD_ARCH:/${BUILD_ARCH}/g&quot; &gt; .config
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

. $HOME/src/jenkins/config.git/scripts/common_jenkins_functions.sh
job_step_header &quot;Building &apos;${PKG_NAME}-${PKG_VERSION}&apos;&quot;

# run the build
cd ${PKG_NAME}-${PKG_VERSION}
time make -j4</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
### TEST OUTPUT BINARY

. $HOME/src/jenkins/config.git/scripts/common_jenkins_functions.sh
job_step_header &quot;Testing output binary for &apos;${PKG_NAME}-${PKG_VERSION}&apos;&quot;


TEST_BINARY_FILE_OUTPUT=$(file $WORKSPACE/${PKG_NAME}-${PKG_VERSION}/${PKG_NAME})

if [ &quot;x${BUILD_ARCH}&quot; = &quot;xarmv6-rpi-linux-gnueabi&quot; \
  -o &quot;x${BUILD_ARCH}&quot; = &quot;xarmv7-rpi2-linux-gnueabihf&quot; \
  -o &quot;x${BUILD_ARCH}&quot; = &quot;xarmv8-rpi3-linux-gnueabihf&quot; ]; then
  export EXPECTED_BINARY_STRING=&quot;ELF 32-bit LSB executable, ARM&quot;
elif [ &quot;x${BUILD_ARCH}&quot; = &quot;xppc&quot; ]; then
  export EXPECTED_BINARY_STRING=&quot;ELF 32-bit MSB executable, PowerPC&quot;
else
  echo &quot;ERROR: missing/incorrect BUILD_ARCH, can&apos;t set EXPECTED_BINARY_STRING!&quot;
  exit 1
fi

VALID_BINARY=$(echo $TEST_BINARY_FILE_OUTPUT \
  | grep -c &quot;${EXPECTED_BINARY_STRING}&quot;)

if [ $VALID_BINARY -gt 0 ]; then
  echo &quot;==== Test binary compiled successfully! ====&quot;
  echo &quot;==== Test binary file is: ====&quot;
  echo $TEST_BINARY_FILE_OUTPUT
else
  echo &quot;ERROR: test binary file output did not match expected output&quot;
  echo &quot;Expected: ${EXPECTED_BINARY_STRING}&quot;
  echo &quot;Received: ${TEST_BINARY_FILE_OUTPUT}&quot;
  exit 1
fi

cp $WORKSPACE/${PKG_NAME}-${PKG_VERSION}/${PKG_NAME} \
  $WORKSPACE/${PKG_NAME}-${PKG_VERSION}-${BUILD_ARCH}</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>busybox-*-*-*-*-*, tar.busybox.log</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.34">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.5.2">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <com.lookout.jenkins.EnvironmentScript plugin="environment-script@1.2.5">
      <script># set up the path to downloaded files
echo TARBALL_DIR=${HOME}/source
# name of what we&apos;re building here
echo PKG_NAME=busybox
# clear the &quot;quiet build&quot; flag
echo QUIET=0</script>
      <scriptType>unixScript</scriptType>
      <runOnlyOnParent>false</runOnlyOnParent>
      <hideEnvironmentVariablesValues>false</hideEnvironmentVariablesValues>
    </com.lookout.jenkins.EnvironmentScript>
  </buildWrappers>
</project>