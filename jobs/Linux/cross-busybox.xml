<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Busybox cross-compiled to:&#xd;
&lt;ul&gt;&#xd;
  &lt;li&gt;32-bit ARM for Raspberry Pi (armv6-lack_rpi-linux-gnueabi)&lt;/li&gt;&#xd;
  &lt;li&gt;32-bit PowerPC (powerpc-lack-linux-gnu)&lt;/li&gt;&#xd;
&lt;/ul&gt;&#xd;
</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.googlecode.GoogleCodeProjectProperty plugin="googlecode@1.7"/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>PKG_NAME</name>
          <description>Name of the download tarball and source directory</description>
          <defaultValue>busybox</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>PKG_VERSION</name>
          <description>Version of busybox to build</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>1.22.1</string>
              <string>1.21.1</string>
              <string>1.20.3</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TARBALL_DIR</name>
          <description>Directory for downloaded source</description>
          <defaultValue>$HOME/source</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>BUILD_ARCH</name>
          <description>Build architecture to use for compiling Busybox</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>arm</string>
              <string>ppc</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.disk__usage.DiskUsageProperty plugin="disk-usage@0.25"/>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec># how often to build?
#@daily</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>/bin/bash $HOME/src/jenkins/config.git/scripts/update_git.sh \
  --path $HOME/src/jenkins/config.git
/bin/bash $HOME/src/jenkins/config.git/scripts/update_git.sh \
  --path $HOME/src/lack/projects.git</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>/bin/bash $HOME/src/jenkins/config.git/scripts/download_tarball.sh \
  --file ${PKG_NAME}-${PKG_VERSION}.tar.bz2 \
  --url http://busybox.net/downloads/ \
  --log $WORKSPACE/wget.${PKG_NAME}.log \
  --outdir $TARBALL_DIR</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>### UNPACK, COPY CONFIG AND BUILD
if [ -d ${WORKSPACE}/${PKG_NAME}-${PKG_VERSION} ]; then
  rm -rf ${WORKSPACE}/${PKG_NAME}-${PKG_VERSION}
fi

tar -jxvf $TARBALL_DIR/${PKG_NAME}-${PKG_VERSION}.tar.bz2

LACK_PROJECTS=&quot;/home/jenkins/src/lack/projects.git&quot;

if [ &quot;x${BUILD_ARCH}&quot; = &quot;xarm&quot; ]; then
  export BUSYBOX_CONFIG=&quot;${LACK_PROJECTS}/armlack/configs/busybox.config.armv6-lack_rpi-linux-gnueabi&quot;
elif [ &quot;x${BUILD_ARCH}&quot; = &quot;xppc&quot; ]; then
  export BUSYBOX_CONFIG=&quot;${LACK_PROJECTS}/ppclack/configs/busybox.config.powerpc-lack-linux-gnu&quot;
else
  echo &quot;ERROR: missing/incorrect BUILD_ARCH specified!&quot;
  echo &quot;BUILD_ARCH choices: &apos;arm&apos; or &apos;ppc&apos;&quot;
  exit 1
fi

cd ${PKG_NAME}-${PKG_VERSION}
cp $BUSYBOX_CONFIG .config
time make</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>### TEST OUTPUT BINARY
TEST_BINARY_FILE_OUTPUT=$(file $WORKSPACE/${PKG_NAME}-${PKG_VERSION}/${PKG_NAME})

if [ &quot;x${BUILD_ARCH}&quot; = &quot;xarm&quot; ]; then
  export EXPECTED_BINARY_STRING=&quot;ELF 32-bit LSB executable, ARM&quot;
elif [ &quot;x${BUILD_ARCH}&quot; = &quot;xppc&quot; ]; then
  export EXPECTED_BINARY_STRING=&quot;ELF 32-bit MSB executable, PowerPC&quot;
else
  echo &quot;ERROR: missing/incorrect BUILD_ARCH specified!&quot;
  echo &quot;BUILD_ARCH choices: &apos;arm&apos; or &apos;ppc&apos;&quot;
  exit 1
fi

VALID_BINARY=$(echo $TEST_BINARY_FILE_OUTPUT \
  | grep -c &quot;${EXPECTED_BINARY_STRING}&quot;)

if [ $VALID_BINARY -gt 0 ]; then
  echo &quot;==== Test binary compiled successfully! ====&quot;
  echo &quot;==== Test binary file is: ====&quot;
  echo $TEST_BINARY_FILE_OUTPUT
else
  echo &quot;ERROR: test binary file output did not match expected output&quot;
  echo &quot;Expected: ${EXPECTED_BINARY_STRING}&quot;
  echo &quot;Received: ${TEST_BINARY_FILE_OUTPUT}&quot;
  exit 1
fi

cp $WORKSPACE/${PKG_NAME}-${PKG_VERSION}/${PKG_NAME} \
  $WORKSPACE/${PKG_NAME}-${PKG_VERSION}-${BUILD_ARCH}</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>busybox-*/busybox</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.1">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</project>