<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>The Eternity Engine is Team Eternity&apos;s advanced Doom source port&lt;br&gt;&#xd;
Builds with: CMake&lt;br&gt;&#xd;
Downloads: &lt;a href=&quot;https://dl.dropbox.com/u/285097&quot;&gt;&#xd;
https://dl.dropbox.com/u/285097&lt;/a&gt;</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>5</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.googlecode.GoogleCodeProjectProperty plugin="googlecode@1.7"/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>PKG_NAME</name>
          <description>Name of the download tarball and source directory</description>
          <defaultValue>ee</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>PKG_VERSION</name>
          <description>Version of eternity to build</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>3.40.30</string>
              <string>3.40.25</string>
              <string>3.40.20</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TARBALL_DIR</name>
          <description>Directory for downloaded source</description>
          <defaultValue>$HOME/source</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.disk__usage.DiskUsageProperty plugin="disk-usage@0.23"/>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>/bin/bash $HOME/src/jenkins/config.git/scripts/deps_check.sh \
  --deps &quot;cmake&quot;
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>/bin/bash $HOME/src/jenkins/config.git/scripts/update_git.sh \
  --path $HOME/src/jenkins/config.git</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>/bin/bash $HOME/src/jenkins/config.git/scripts/delete_dir.sh \
  -- $WORKSPACE/output $WORKSPACE/artifacts</command>
    </hudson.tasks.Shell>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.29">
      <project>libsdl</project>
      <filter>libsdl.artifact.tar.xz</filter>
      <target></target>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.29">
      <project>libsdl_image</project>
      <filter>libsdl_image.artifact.tar.xz</filter>
      <target></target>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.29">
      <project>libsdl_mixer</project>
      <filter>libsdl_mixer.artifact.tar.xz</filter>
      <target></target>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.29">
      <project>libsdl_net</project>
      <filter>libsdl_net.artifact.tar.xz</filter>
      <target></target>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.29">
      <project>libsdl_ttf</project>
      <filter>libsdl_ttf.artifact.tar.xz</filter>
      <target></target>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.29">
      <project>libpango-dep-freetype</project>
      <filter>freetype.artifact.tar.xz</filter>
      <target></target>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>/bin/bash $HOME/src/jenkins/config.git/scripts/unpack_build_artifacts.sh \
 -- libsdl libsdl_image libsdl_mixer libsdl_net libsdl_ttf freetype
/bin/bash $HOME/src/jenkins/config.git/scripts/munge_lib_config.sh --file sdl-config --unmunge
/bin/bash $HOME/src/jenkins/config.git/scripts/munge_rpath.sh</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># https://dl.dropbox.com/u/285097
/bin/bash $HOME/src/jenkins/config.git/scripts/download_tarball.sh \
  --file ${PKG_NAME}-${PKG_VERSION}-src.zip \
  --url https://dl.dropbox.com/u/285097 \
  --log $WORKSPACE/wget.${PKG_NAME}.log \
  --outdir $TARBALL_DIR</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>/bin/bash $HOME/src/jenkins/config.git/scripts/unpack_and_config.sh \
  --no-config \
  --prefix=${WORKSPACE}/output \
  --tarball=$TARBALL_DIR/${PKG_NAME}-${PKG_VERSION}-src.zip
cd ${WORKSPACE}/${PKG_NAME}-${PKG_VERSION}-src
mkdir jenk-build
cd jenk-build
# SDLDIR and friends is for CMake, the build won&apos;t happen without it
PKG_CONFIG_PATH=${WORKSPACE}/artifacts/lib/pkgconfig \
SDL_CONFIG=${WORKSPACE}/artifacts/bin/sdl-config \
  LD_LIBRARY_PATH=${WORKSPACE}/artifacts/lib \
  PATH=$PATH:${WORKSPACE}/artifacts/bin \
  cmake .. \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=${WORKSPACE}/output \
    -G&quot;Unix Makefiles&quot; \

# run the actual build
time make
ln -s libpng/libpng15.a libpng/libpng.a
time make install</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>/bin/bash $HOME/src/jenkins/config.git/scripts/create_build_artifact.sh \
  --name=eternity \
  --source-version=${PKG_VERSION} \
  --output=${WORKSPACE}
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>### CLEAN SOURCE DIRECTORY
cd ${PKG_NAME}-${PKG_VERSION}
make clean

### DELETE OUTPUT AND ARTIFACTS DIRECTORIES
/bin/bash $HOME/src/jenkins/config.git/scripts/delete_dir.sh \
  -- $WORKSPACE/output $WORKSPACE/artifacts</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>eternity.artifact.tar.xz</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.3.1">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</project>
