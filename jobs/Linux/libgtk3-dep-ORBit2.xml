<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>ORBit is a lightweight CORBA ORB designed for use with the Gnome project.&lt;br&gt;&#xd;
(Nothing about it requires Gnome, though.)&lt;br&gt;&#xd;
Downloads: &lt;a href=&quot;http://ftp.gnome.org/pub/GNOME/sources/ORBit2/2.14/&quot;&gt;&#xd;
http://ftp.gnome.org/pub/GNOME/sources/ORBit2/2.14/&lt;/a&gt;</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>5</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.googlecode.GoogleCodeProjectProperty plugin="googlecode@1.7"/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>PKG_NAME</name>
          <description>Name of the download tarball and source directory</description>
          <defaultValue>ORBit2</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>PKG_VERSION</name>
          <description>Version of ORBit2 to build</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>2.14.19</string>
              <string>2.14.18</string>
              <string>2.14.17</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TARBALL_DIR</name>
          <description>Directory for downloaded source</description>
          <defaultValue>$HOME/source</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>/bin/sh $HOME/src/jenkins/config.git/scripts/update_git.sh \
  --path $HOME/src/jenkins/config.git</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>/bin/sh $HOME/src/jenkins/config.git/scripts/delete_dir.sh \
  -- $WORKSPACE/output</command>
    </hudson.tasks.Shell>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.27">
      <project>libgtk3-dep-intltool</project>
      <filter>intltool.artifact.tar.xz</filter>
      <target></target>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.27">
      <project>libglib</project>
      <filter>libglib.artifact.tar.xz</filter>
      <target></target>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.27">
      <project>libglib-dep-libffi</project>
      <filter>libffi.artifact.tar.xz</filter>
      <target></target>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.27">
      <project>libgtk3-dep-libIDL</project>
      <filter>libIDL.artifact.tar.xz</filter>
      <target></target>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>/bin/sh $HOME/src/jenkins/config.git/scripts/unpack_artifacts.sh \
  -- intltool libglib libffi libIDL

/bin/bash $HOME/src/jenkins/config.git/scripts/munge_rpath.sh</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>/bin/sh $HOME/src/jenkins/config.git/scripts/download_tarball.sh \
  --file ${PKG_NAME}-${PKG_VERSION}.tar.bz2 \
  --url http://ftp.gnome.org/pub/GNOME/sources/${PKG_NAME}/2.14/ \
  --log $WORKSPACE/wget.${PKG_NAME}.log \
  --outdir $TARBALL_DIR</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>PKG_CONFIG_PATH=${WORKSPACE}/artifacts/lib/pkgconfig \
PATH=${WORKSPACE}/artifacts/bin:$PATH \
/bin/sh $HOME/src/jenkins/config.git/scripts/unpack_and_config.sh \
  --prefix=${WORKSPACE}/output \
  --tarball=$TARBALL_DIR/${PKG_NAME}-${PKG_VERSION}.tar.bz2</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>/bin/sh $HOME/src/jenkins/config.git/scripts/build_source.sh \
  --path=${PKG_NAME}-${PKG_VERSION} \
  --test
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>/bin/bash $HOME/src/jenkins/config.git/scripts/create_build_artifact.sh \
  --name=lib${PKG_NAME} \
  --source-version=${PKG_VERSION} \
  --output=${WORKSPACE}
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>libORBit2.artifact.tar.xz</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.3.1">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</project>
