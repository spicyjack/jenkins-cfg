<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Build Perl for Windows&lt;br&gt;&#xd;
Downloads: http://www.cpan.org/src/README.html</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>5</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>PKG_VERSION</name>
          <description>The version of Perl to build</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>5.18.2</string>
              <string>5.18.1</string>
              <string>5.18.0</string>
              <string>5.16.3</string>
              <string>5.16.2</string>
              <string>5.19.0</string>
              <string>5.19.1</string>
              <string>5.14.4</string>
              <string>5.12.5</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PKG_NAME</name>
          <description>Name of the download tarball and source directory</description>
          <defaultValue>perl</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TARBALL_DIR</name>
          <description>Path to source code directory</description>
          <defaultValue>$JENKINS_HOME/source</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>### UPDATE GIT
echo &quot;==== Updating &apos;jenkins-config.git&apos; repo ====&quot;
cd $JENKINS_HOME/src/jenkins-config.git
git pull
echo &quot;==== Updating &apos;camelbox.git&apos; repo ====&quot;
cd $JENKINS_HOME/src/camelbox.git
git pull</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>### DOWNLOAD PERL
echo &quot;==== Downloading Perl ${PKG_VERSION} ====&quot;
if [ ! -f ${TARBALL_DIR}/${PKG_NAME}-${PKG_VERSION}.tar.gz ]; then
  wget -O ${TARBALL_DIR}/${PKG_NAME}-${PKG_VERSION}.tar.gz \
    http://www.cpan.org/src/5.0/${PKG_NAME}-${PKG_VERSION}.tar.gz
else
  echo &quot;-- Perl ${PKG_VERSION} already downloaded --&quot;
fi

exit 0</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>### DELETE OUTPUT
# always delete old output directory, if it exists
echo &quot;==== Checking for previous build of Perl ====&quot;
if [ -d &quot;${WORKSPACE}\\output&quot; ]; then
  echo &quot;-- Deleting output directory from previous build --&quot;
  /bin/rm -rf ${WORKSPACE}\\output
else
  echo &quot;-- No previous Perl builds found in ${WORKSPACE}/output --&quot;
fi</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>### UNPACK PERL
# always unpack fresh source
echo &quot;==== Checking for existing Perl source for ${PKG_VERSION} ====&quot;
if [ -d &quot;${WORKSPACE}\\${PKG_NAME}-${PKG_VERSION}&quot; ]; then
  echo &quot;-- Deleting existing source tree for &apos;${PKG_NAME}-${PKG_VERSION}&apos;; --&quot;
  /bin/rm -rf ${WORKSPACE}\\${PKG_NAME}-${PKG_VERSION}
else
  echo &quot;-- No Perl tarball currently unpacked in ${WORKSPACE} --&quot;
fi</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>### UNPACK PERL
#echo &quot;==== Resetting PATH environment variable ====&quot;
#export PATH=&quot;.:/mingw/bin:/bin:/usr/bin&quot;
#echo &quot;PATH is now: $PATH&quot;
echo &quot;==== Gunzipping Perl ${PKG_VERSION} in ${WORKSPACE} ====&quot;
/bin/gunzip -c ${TARBALL_DIR}/${PKG_NAME}-${PKG_VERSION}.tar.gz | /bin/tar -xf -</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>### COPY MAKEFILE
echo &quot;==== Copying makefile.mk to ${PKG_NAME}-${PKG_VERSION}\\win32 ====&quot;
if [ -d ${WORKSPACE}\\${PKG_NAME}-${PKG_VERSION} ]; then
  cd ${PKG_NAME}-${PKG_VERSION}\\win32
  mv makefile.mk makefile.mk.orig
  #MAKEFILE_LOC=&quot;$JENKINS_HOME/src/camelbox.git/build-extras/next_build/${PKG_VERSION}/win32/makefile.mk&quot;
  MAKEFILE_LOC=&quot;/c/Apps/Jenkins/src/camelbox.git/build-extras/next_build/perl-5.18.2/win32/makefile.mk&quot;
  cp $MAKEFILE_LOC $PWD
else 
  echo &quot;==== ${WORKSPACE}/${PKG_NAME}-${PKG_VERSION} not found :( ====&quot;
fi</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>### BUILD/TEST/INSTALL PERL
echo &quot;==== Resetting PATH environment variable ====&quot;
export PATH=&quot;.:/mingw/bin:/bin:/usr/bin:/c/WINDOWS/system32&quot;

BUILD_DIR=&quot;${PKG_NAME}-${PKG_VERSION}/win32&quot;

echo &quot;==== Changing to build directory: ${BUILD_DIR} ====&quot;
cd ${BUILD_DIR}

echo &quot;PATH is: $PATH&quot;
echo &quot;PWD is: $PWD&quot;

echo &quot;==== Running &apos;dmake&apos; in ${PKG_NAME}-${PKG_VERSION}/win32 ====&quot;
#time dmake -v
time dmake

echo &quot;==== Running &apos;dmake test&apos; in ${PKG_NAME}-${PKG_VERSION}/win32 ====&quot;
#time dmake -v test
time cmd.exe /k dmake test

echo &quot;==== Running &apos;dmake install&apos; in ${PKG_NAME}-${PKG_VERSION}/win32 ====&quot;
#time cmd.exe /k dmake -v install
time cmd.exe /k dmake install</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>### CREATE ARTIFACT
echo &quot;==== Resetting PATH environment variable ====&quot;
export PATH=&quot;.:/mingw/bin:/bin:/usr/bin:/c/WINDOWS/system32&quot;
/bin/tar.exe -cvf - output | /bin/xz.exe --compress --stdout - \
  &gt; ${WORKSPACE}/${PKG_NAME}.artifact.tar.xz</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>perl.artifact.tar.xz</artifacts>
      <latestOnly>false</latestOnly>
      <allowEmptyArchive>false</allowEmptyArchive>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers/>
</project>