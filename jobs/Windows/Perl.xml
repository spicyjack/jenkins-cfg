<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Build Perl for Windows</description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>-1</daysToKeep>
    <numToKeep>5</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>PKG_VERSION</name>
          <description>The version of Perl to build</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>5.18.0</string>
              <string>5.16.3</string>
              <string>5.16.2</string>
              <string>5.19.0</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PKG_NAME</name>
          <description>Name of the download tarball and source directory</description>
          <defaultValue>perl</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TARBALL_DIR</name>
          <description>Path to source code directory</description>
          <defaultValue>$JENKINS_HOME\source</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!C:\MinGW\msys\1.0\bin\bash.exe --rcfile /p/.bashrc.jenkins
echo &quot;==== Displaying shell environment ====&quot;
set
ls -l /
echo &quot;JENKINS_HOME is $JENKINS_HOME&quot;</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!C:\MinGW\msys\1.0\bin\bash.exe --rcfile /p/.bashrc.jenkins
echo &quot;==== Updating &apos;jenkins-config.git&apos; repo ====&quot;
cd $JENKINS_HOME/src/jenkins-config.git
git pull
echo &quot;==== Updating &apos;camelbox.git&apos; repo ====&quot;
cd $JENKINS_HOME/src/camelbox.git
git pull</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!C:\MinGW\msys\1.0\bin\bash.exe --rcfile /p/.bashrc.jenkins&apos;
echo &quot;==== Downloading Perl ${PKG_VERSION} ====&quot;
if [ ! -f ${TARBALL_DIR}/${PKG_NAME}-${PKG_VERSION}.tar.gz ]; then
  wget -O ${TARBALL_DIR}/${PKG_NAME}-${PKG_VERSION}.tar.gz \
    http://www.cpan.org/src/5.0/${PKG_NAME}-${PKG_VERSION}.tar.gz
else
  echo &quot;--  Perl ${PKG_VERSION} already downloaded successfully --&quot;
fi

exit 0</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!C:\MinGW\msys\1.0\bin\bash.exe --rcfile /p/.bashrc.jenkins
# always unpack fresh source
echo &quot;==== Checking for existing Perl ${PKG_VERSION} ====&quot;
if [ -d &quot;${WORKSPACE}/${PKG_NAME}-${PKG_VERSION}&quot; ]; then
  echo &quot;-- Deleting existing source tree for &apos;${PKG_NAME}-${PKG_VERSION}&apos;; --&quot;
  /bin/rm -rf ${WORKSPACE}/${PKG_NAME}-${PKG_VERSION}
else
  echo &quot;-- No Perl tarball currently unpacked in ${WORKSPACE} --&quot;
fi</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!C:\MinGW\msys\1.0\bin\bash.exe --rcfile /p/.bashrc.jenkins
echo &quot;==== Gunzipping Perl ${PKG_VERSION} in ${WORKSPACE} ====&quot;
/bin/gunzip -c ${TARBALL_DIR}/${PKG_NAME}-${PKG_VERSION}.tar.gz | /bin/tar -xvf -</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!C:\MinGW\msys\1.0\bin\bash.exe --rcfile /p/.bashrc.jenkins
if [ -d ${WORKSPACE}/${PKG_NAME}-${PKG_VERSION} ]; then
  cd ${PKG_NAME}-${PKG_VERSION}/win32
  mv makefile.mk makefile.mk.orig
  cp $JENKINS_HOME/src/camelbox.git/build-extras/next_build/perl-5.18.0/win32/makefile.mk .
else 
  echo &quot;${WORKSPACE}/${PKG_NAME}-${PKG_VERSION} not found :(&quot;
fi</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!C:\MinGW\msys\1.0\bin\bash.exe --rcfile /p/.bashrc.jenkins
cd ${PKG_NAME}-${PKG_VERSION}/win32
time dmake
time dmake test
time dmake install</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>