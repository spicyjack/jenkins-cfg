<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Build GTK Glib library, including dependencies</description>
  <logRotator>
    <daysToKeep>-1</daysToKeep>
    <numToKeep>5</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.googlecode.GoogleCodeProjectProperty plugin="googlecode@1.7"/>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>SOURCE_DIR</name>
          <description>Directory for downloaded source</description>
          <defaultValue>$HOME/source</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>_LIBGLIB_VERSION</name>
          <description>Version of libglib to build</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>2.34.3</string>
              <string>2.34.2</string>
              <string>2.34.1</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>LIBGLIB_TARBALL</name>
          <description>Full filename of the tarball file; used when downloading, and when checking to see if it&apos;s already been downloaded</description>
          <defaultValue>glib-${_LIBGLIB_VERSION}.tar.xz</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>_LIBFFI_VERSION</name>
          <description>Version of libpixman to build</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>3.0.11</string>
              <string>3.0.10</string>
              <string>3.0.9</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>LIBFFI_TARBALL</name>
          <description>Full filename of the tarball file; used when downloading, and when checking to see if it&apos;s already been downloaded</description>
          <defaultValue>libffi-${_LIBFFI_VERSION}.tar.gz</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>## UPDATE JENKINS-CFG
cd $HOME/src/jenkins-cfg.git
git pull</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>## DELETE OUTPUT DIRS

# both
rm -rf $WORKSPACE/output</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>## PACKAGE DEPENDENCY CHECK

# libffi
#/bin/sh $HOME/src/jenkins-cfg.git/scripts/deps_check.sh --deps &quot;libx11-dev&quot;

# libglib
#/bin/sh $HOME/src/jenkins-cfg.git/scripts/deps_check.sh --deps &quot;libx11-dev&quot;</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>## DOWNLOAD LIBFFI
/bin/sh $HOME/src/jenkins-cfg.git/scripts/download.sh --file $LIBFFI_TARBALL \
  --url ftp://sourceware.org/pub/libffi \
  --log $WORKSPACE/wget.libffi.log \
  --outdir $SOURCE_DIR</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>## UNPACK AND CONFIGURE LIBPIXMAN

# always unpack fresh source
if [ -d libffi-${_LIBFFI_VERSION} ]; then
  rm -rf libffi-${_LIBFFI_VERSION}
fi

tar -zxvf $SOURCE_DIR/$LIBFFI_TARBALL

cd libffi-${_LIBFFI_VERSION}

# now run Configure
./configure --prefix=${WORKSPACE}/output</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>## BUILD LIBFFI
cd libffi-${_LIBFFI_VERSION}
time make
# no test suite
time make install</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>## DOWNLOAD LIBGLIB
/bin/sh $HOME/src/jenkins-cfg.git/scripts/download.sh --file $LIBGLIB_TARBALL \
  --url http://ftp.gnome.org/pub/GNOME/sources/glib/2.34/ \
  --log $WORKSPACE/wget.libglib.log \
  --outdir $SOURCE_DIR</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>## UNPACK AND CONFIGURE LIBGLIB

# always unpack fresh source
if [ -d glib-${_LIBGLIB_VERSION} ]; then
  rm -rf cairo-${_LIBGLIB_VERSION}
fi

# -J == xz compression
tar -Jxvf $SOURCE_DIR/$LIBGLIB_TARBALL

cd glib-${_LIBGLIB_VERSION}

# now run Configure
echo &quot;Current directory is: $(pwd)&quot;
PKG_CONFIG_PATH=${WORKSPACE}/output/lib/pkgconfig \
  ./configure --prefix=${WORKSPACE}/output</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>## BUILD AND TEST LIBGLIB
cd glib-${_LIBGLIB_VERSION}
time make
time make test
time make install</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>## ARCHIVE BINARY BUILDS
# -J == xz compression

cd $WORKSPACE/output
tar -cJvf $WORKSPACE/libglib-${_LIBGLIB_VERSION}.artifact.tar.xz .
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>libglib-${_LIBGLIB_VERSION}.artifact.tar.xz</artifacts>
      <latestOnly>false</latestOnly>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers/>
</project>